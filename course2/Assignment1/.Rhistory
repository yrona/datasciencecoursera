x <- 1
print (x)
msg <- "hello"
print(msg)
x
x <- 1:20
x
m <- matrix(nrow=4,ncol=2)
dim(m)
m <- matrix(1:6,nrow=4,ncol=2)
m <- matrix(1:8,nrow=4,ncol=2)
m
m <- 1:10
m
dim(m)<-c(2,5)
m
x<-1:3
y<- 10:12
cbind(x,y)
rbind(x,y)
x<-factor(c("yes","yes","no","yes","no","Jim"))
x
table(x)
unlcass(x)
unclass(x)
x<-factor(c("yes","yes","no","yes","no"),levels=c("yes","no"))
x
table(x)
x <- data.frame(foo=1:4, bar=c(T,T,F,F))
x
nrow(x)
ncol(x)
dim(x)
x <- 1:3
names(x) <- c("Yilmaz","Omer","Leilani")
x
x <- list(Yilmaz=1,Omer=2,Leilani="fangs")
x
y <- data.frame(a=1,b="a")
dput(y)
dput(y,"y.R")
new.y = dget("y.R")
new.y <- dget("y.R")
new.y
dump (c("m","y","x"))
dump (c("m","y","x"), file="firstdump.R")
m<-1
y<-1
x<-1
source ("firstdump.R")
x <- c[1:5:10:2:6:9:3:4:7]
x <- c(1:5:10:2:6:9:3:4:7)
x <- c(1,5,10,2,6,9,3,4,7)
x
x[2:4]
x[x<=4]
x[x>=4]
x[x>4]
mean(x)
u <- x[x>median(x)]
u
x<- list(foo=1:4, mixer=0.6)
x
x[1]
x[[1]]
x[[2]]
x[[1]][1]
x[[1]][2]
x[[foo]][2]
x[["foo"]][2]
x <- list(a=list("zebra","elephant","mushroom"), b = list(2.5,4.7,9.4,10.2))
x[[1]]
x[[c(1,2)]]
x <- matrix(1:6,2,3)
x[1,2]
x[1]
x[1,]
x
x <- c(1,2,NA,4,NA,5)
bad <- is.na(x)
good <- !is.na(x)
x[good]
x[!bad]
x[good]
complete.cases(x)
good
airquality <- data.frame(foo = c(1,NA,3,NA,5), bar = c("a","b","c","d","e"))
airquality[1:3]
airquality[1:3,]
good <- complete.cases(airquality)
airquality[good,][1:3]
airquality[good,][1:3,]
airquality[1:3,]
x <- matrix(1:4,2,2);y <- matrix(rep(10,4),2,2)
x
y
x %*% y
y %*% x
install.packages("swirl")
install.packages("swirl")
install("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl("R Programming")
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z *2 +100
my_sqrt = sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1:4) + c(0,10,100)
c(1,2,3,4) + c(0,10,100)
z *2 +1000
my_div
getwd()
ls()
z <- 9
x <- 9
ls()
dir()
?list.files
args("list.files")
args(list.files)
old.dir = getwd()
old.dir <- getwd()
dir.create("swirl_testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2/testdir3",recursive=true)
dir.create("testdir2/testdir3",recursive=TRUE)
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
myseq <- seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(1,length(my_seq))
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Yilmaz")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep=" ")
paste(1:3,c("X","Y","Z"),sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS,c(1:4),sep="-")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na = is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
name(vect)
names(vect)
vect2<-c(11,2,NA)
names(vect2) <c("foo","bar","norf")
names(vect2) <-c("foo","bar","norf")
identical(vect,vect2)
vect2["bar"]
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?"matrix"
?matrix
my_matrix <-matrix(1:20,4,5)
my_matrix2 <-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients=c("Bill", "Gina", "Kelly", "Sean")
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data=data.frame(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight","bp", "rating", "test")
colnames(my_data)<-cnames
my_data
TRUE == TRUE
(FALSE ==TRUE) == FALSE
6== 7
6<7
10<=10
5!=7
5 != 7
!(5==7)
FALSE & FALSE
true & c(true,false,false)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE     | c(TRUE, FALSE, FALSE)
TRUE     || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
ISTRUE(6 > 4)
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
CV
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
swirl
library(swirl)
ls
ls()
list(ls())
rm(list(ls()))
rm(list=ls())
swirl
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
is.numeric(c(2,4,NA))
numeric(c(2,NA,4))
numeric(c(2,NA,4),length=3)
sum(c(2,4,NA))
sum(c(2,4,NA),na.rm=TRUE)
is.numeric(1:4)
x<-c(1,NA,3,4)
x[is.na(x)]
x[!is.na(x)]
x[is.numeric(x)]
x[is.numeric(x) & !isna(x)]
x[is.numeric(x) & !is.na(x)]
x<-c(1,2,3,"d")
x
x[is.numeric(x) & !is.na(x)]
sum(x)
x<-c(1,NA,3,4)
lengt(x[!is.na(x)])
length(x[!is.na(x)])
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
telegram("THIS","SUCKS")
submit()
submit()
mad_libs(place="the Eiffel Tower",noun="blue maccaw",adjective="cute")
submit()
"I" %p% "love" %p% "R!"
class(c(4, "a", TRUE))
?cbind
quiz1_data <- read.csv("C:\Users\Yilmaz\Dropbox\Courses\Data Science - John Hopkins\working\rprog-data-quiz1_data\hw1_data.csv")
quiz1_data <- read.csv( 'C:\Users\Yilmaz\Dropbox\Courses\Data Science - John Hopkins\working\rprog-data-quiz1_data\hw1_data.csv')
quiz1_data <- read.csv("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\rprog-data-quiz1_data\\hw1_data.csv")
colnames(quiz1_data)
quiz1_data[1:2]
quiz1_data[,][1:2]
quiz1_data[1:2,]
length(row.names(quiz1_data))
quiz1_data[,][-2:-1]
quiz1_data[,][152:153]
quiz1_data[-1:-2,]
quiz1_data[152:153,]
quiz1_data[152:153,Ozone]
quiz1_data[152:153,1]
quiz1_data[47,1]
quiz1_data[47,]
quiz1_data[,1]
quiz1_data[,"Ozone"]
is.na(quiz1_data[,"Ozone"])
sum(is.na(quiz1_data[,"Ozone"]))
!is.na(quiz1_data[,"Ozone"])
quiz1_data[1,"Ozone"]
quiz1_data[!is.na(quiz1_data[,"Ozone"]),"Ozone"]
length(quiz1_data[!is.na(quiz1_data[,"Ozone"]),"Ozone"])
116+37
mean(quiz1_data[!is.na(quiz1_data[,"Ozone"]),"Ozone"])
mean(quiz1_data[,"Ozone"],na.rm=TRUE)
Q18 <- quiz1_data[quiz1_data[,"Ozone"]>31]
Q18 <- quiz1_data[quiz1_data[,"Ozone"]>31,]
Q18
Q18 <- quiz1_data[(quiz1_data[,"Ozone"]>31) & (!is.na(quiz1_data[,"Ozone"]),]
Q18 <- quiz1_data[(quiz1_data[,"Ozone"]>31) & (!is.na(quiz1_data[,"Ozone"])),]
Q18
Q18 <- quiz1_data[(quiz1_data[,"Ozone"]>31) & (!is.na(quiz1_data[,"Ozone"])) &(quiz1_data[,"Temp"]>90) & (!is.na(quiz1_data[,"Temp"])),]
Q18
mean(Q18[,Solar.R],na.rm = TRUE)
mean(Q18[,"Solar.R"],na.rm = TRUE)
Q19 <- quiz1_data[(quiz1_data[,"Month"]>5) & (!is.na(quiz1_data[,"Ozone"])) ,]
mean(Q19[,"Temp"],na.rm = TRUE)
Q19 <- quiz1_data[(quiz1_data[,"Month"]>6) & (!is.na(quiz1_data[,"Ozone"])) ,]
mean(Q19[,"Temp"],na.rm = TRUE)
Q19 <- quiz1_data[(quiz1_data[,"Month"]=6) & (!is.na(quiz1_data[,"Ozone"])) ,]
mean(Q19[,"Temp"],na.rm = TRUE)
Q19 <- quiz1_data[(quiz1_data[,"Month"]=6) & (!is.na(quiz1_data[,"Month"])) ,]
mean(Q19[,"Temp"],na.rm = TRUE)
quiz1_data[(quiz1_data[,"Month"]=6) & (!is.na(quiz1_data[,"Month"])) ,]
quiz1_data[(quiz1_data[,"Month"]=5) & (!is.na(quiz1_data[,"Month"])) ,]
quiz1_data <- read.csv("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\rprog-data-quiz1_data\\hw1_data.csv")
Q19 <- quiz1_data[(quiz1_data[,"Month"]=6) & (!is.na(quiz1_data[,"Month"])) ,]
Q19
quiz1_data[,"month"]
quiz1_data[,"Month"]
quiz1_data <- read.csv("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\rprog-data-quiz1_data\\hw1_data.csv")
Q19 <- quiz1_data[(quiz1_data[,"Month"]==6) & (!is.na(quiz1_data[,"Month"])) ,]
Q19
mean(Q19[,"Temp"],na.rm = TRUE)
Q20 <- quiz1_data[(quiz1_data[,"Month"]==5) & (!is.na(quiz1_data[,"Month"])) ,]
roof(Q20[,"Ozone"])
max(Q20[,"Ozone"])
max(Q20[,"Ozone"],na.rm=TRUE)
Q20[,"Ozone"]
cd ~/Dropbox
ls
dir
source("pollutantmean.R")
lwd
wd
?wd
??wd
getwd()
getwd("C:\Users\Yilmaz\Dropbox\Courses\Data Science - John Hopkins\working\datasciencecoursera\course2\Assignment1")
getwd("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\datasciencecoursera\\course2\\Assignment1")
setwd("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\datasciencecoursera\\course2\\Assignment1")
getwd()
source("pollutantmean.R")
pollutantmean("a")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata")
source("pollutantmean.R")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata")
test<- read.csv( pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"))
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"),"a",2)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"),"a",2)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"),"a",2)
paste(c(id,'.csv')
1
paste(c(id,'.csv'))
paste(c(1,'.csv'))
paste(1,'.csv')
source("pollutantmean.R")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"),"a",2)
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"),"a","2")
pollutantmean("C:\\Users\\Yilmaz\\Dropbox\\Courses\\Data Science - John Hopkins\\working\\specdata"),"a",2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
file.path(directory,paste(id,'.csv'))
}
2+4
